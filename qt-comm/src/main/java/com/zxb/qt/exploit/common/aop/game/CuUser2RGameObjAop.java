package com.zxb.qt.exploit.common.aop.game;


import com.zxb.qt.exploit.common.boot.exception.BlogException;
import com.zxb.qt.exploit.entity.User;
import com.zxb.qt.exploit.entity.vo.GameRedisVO;
import org.apache.commons.beanutils.BeanUtils;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;
import org.aspectj.lang.reflect.MethodSignature;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Parameter;

@Aspect
@Component
@Order( 0 )
public class CuUser2RGameObjAop {

    //切入点
    @Pointcut("@annotation(com.zxb.qt.exploit.common.anno.game.CuUser2RGameObjAnno)")
    public void annotationPointCut() {
    }

    @Around("annotationPointCut()")
    public Object around(ProceedingJoinPoint pjp) throws Throwable {
        User user = com.zxb.qt.exploit.common.shiro.CurrentUser.getUser();

        //得到当前执行方法对象所有参数
        Object[] args = pjp.getArgs();
        Class c =  pjp.getTarget().getClass();
        //获取当前执行的方法名
        String methodName = pjp.getSignature().getName();
        //获取当前方法所有参数类型
        Class[] argClass = ((MethodSignature) pjp.getSignature()).getParameterTypes();
        //得到当前执行方法对象
        Method method = c.getMethod(methodName, argClass);
        //得到当前执行方法对象所有参数对象为Parameter
        Parameter[] parameters = method.getParameters();
        for ( int i = 0 ; i < parameters.length ; i++ ){
            String p = parameters[i].getType().getTypeName();
            if (  GameRedisVO.class.getName().equalsIgnoreCase( p )  ){
                args[i] = new GameRedisVO();
                BeanUtils.copyProperties( args[i] , user );
            }
        }
        Object ret = pjp.proceed( args );
        return  ret;
    }


    public static void main(String[] args) throws InvocationTargetException, IllegalAccessException {

        User user = new User();
        GameRedisVO gameRedisVO = new GameRedisVO();
        user.setId( "123" );
        user.setSalt( "123" );
        BeanUtils.copyProperties( gameRedisVO , user  );

        System.out.println( gameRedisVO );



    }


}
