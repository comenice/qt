package com.zxb.qt.exploit.common.boot.upfile;


import com.jcraft.jsch.*;
import com.zxb.qt.exploit.common.boot.exception.BlogException;
import com.zxb.qt.exploit.common.boot.utils.DateUtils;
import com.zxb.qt.exploit.common.editor.EdPojo;
import com.zxb.qt.exploit.common.service.property.ServiceConfigProperty;
import org.apache.http.entity.ContentType;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Properties;
import java.util.UUID;
import java.util.Vector;

public class SFtpJSch {

    public static ChannelSftp sftp = null;

    //账号
    private static String user = "root";
    //主机ip
    private static String host =  "139.224.129.134";
    //密码
    private static String password = "QingTian..";
    //端口
    private static int port = 22;
    //文件上传地址
    private static String directory = "/home/file/";


    //博客图片上传路径 后面加上每天的日期 比如"/file/img/blog/user/ed/2018-12-1/"
    private static String urlblogImg = "/home/file/img/blog/user/ed"+"/"+ DateUtils.now + "/";

    //图片头像上传地址
    private static String directoryImg = "/home/file/img/blog/user/head";
    //nginx 映射头像访问路径
    private static String urlImg = "/file/img/blog/user/head/";

    //下载目录
    private static String saveFile = "D:\\VMware\\XuNiJi\\imgs";

        public static SFtpJSch getConnect(){
            SFtpJSch ftp = new SFtpJSch();
            try {
                JSch jsch = new JSch();

                //获取sshSession  账号-ip-端口
                Session sshSession =jsch.getSession(user, host,port);
                //添加密码
                sshSession.setPassword(password);
                Properties sshConfig = new Properties();
                //严格主机密钥检查
                sshConfig.put("StrictHostKeyChecking", "no");

                sshSession.setConfig(sshConfig);
                //开启sshSession链接
                sshSession.connect();
                //获取sftp通道
                Channel channel = sshSession.openChannel("sftp");
                //开启
                channel.connect();
                sftp = (ChannelSftp) channel;
            } catch (Exception e) {
                e.printStackTrace();
            }
            return ftp;
        }

    /**
     *
     * @param uploadFile 上传文件的路径
     * @return 服务器上文件名
     */
    public String upload(String uploadFile) {
        File file = null;
        String fileName = null;
        try {
            sftp.cd(directory);
            file = new File(uploadFile);
            //获取随机文件名
            fileName  = UUID.randomUUID().toString() + file.getName().substring(file.getName().length()-5);
            //文件名是 随机数加文件名的后5位
            sftp.put(new FileInputStream(file), fileName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return file == null ? null : fileName;
    }

    /**
     * 默认用这个方法 传输 用户头像
     * @param stream
     * @param fileName
     * @return
     */
    public String upload (InputStream stream , String fileName){
        File file = null;
        try {
            sftp.cd( directoryImg );
            sftp.put( stream , fileName  );
        } catch (SftpException e) {
            new BlogException( "-1" , "文件上传失败" );
        }
        return urlImg + fileName ;
    }


    /**
     * 上传博客图片
     * @param stream
     * @param fileName
     * @return
     */
    public EdPojo uploadBlogImg (InputStream stream   , String fileName ) throws SftpException {
        //对文件属性封装的对象
        SftpATTRS attrs = null;
        try {
            attrs = sftp.stat( urlblogImg );
        } catch (Exception e) {
            sftp.mkdir( urlblogImg );
            e.printStackTrace();
            //e.printStackTrace();
        }
        //如果没有这个文件夹
        sftp.cd( urlblogImg );
        sftp.put( stream , fileName );
        return   new EdPojo(  ServiceConfigProperty.serviceIp + "/" + nginxFileUrl( urlblogImg ) + "/" + fileName  );
    }
    /**
     * 下载文件
     */
    public void download(String downloadFileName) {
        try {
            sftp.cd(directory);
            File file = new File(saveFile);
            sftp.get(downloadFileName, new FileOutputStream(file));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * 删除文件
     *
     * @param deleteFile
     *            要删除的文件名字
     */
    public void delete(String deleteFile) {
        try {
            sftp.cd(directory);
            sftp.rm(deleteFile);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * 列出目录下的文件
     *
     * @param directory
     *            要列出的目录
     * @param sftp
     * @return
     * @throws SftpException
     */
    public Vector listFiles(String directory)
            throws SftpException {
        System.out.println( sftp.lpwd() );
        return sftp.ls(directory);
    }

    //nginx 拦截路径为/file/ 会映射到 /home/file 该目录下面就是我们文件服务器的啦
    //图片服务器再 /home/file/img 。。。
    //而我们上传文件 需要 cd进入当前文件
    //nginx 映射路径去掉/home 即可
    public String nginxFileUrl( String url ){
        return   url.substring( 5 , url.length() );
    }


    public static void main(String[] args) {

        SFtpJSch.getConnect();
        try {
            sftp.mkdir( "/home/file/img/blog/user/2019-5-16/qwe/wqe" );
        } catch (SftpException e) {
            e.printStackTrace();
        }

    }


}
