package com.zxb.qt.exploit.entity;

import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableLogic;
import com.baomidou.mybatisplus.extension.activerecord.Model;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
import lombok.Data;
import org.springframework.format.annotation.DateTimeFormat;

import java.io.Serializable;
import java.time.LocalDateTime;

/**
 * <p>
 * 
 * </p>
 *
 * @author  --郑晓波-- 
 * @since 2019-04-09
 */
@Data
public class User extends Model<User> {

    private static final long serialVersionUID = 1L;

    @TableId(value = "ID", type = IdType.UUID)
    private String id;

    @TableField("URL")
    private String url;

    @TableField("SALT")
    private String salt;

    @TableField("THRID_USER_ID")
    private String thridUserId;

    @TableField("USER_NAME")
    private String userName;

    @TableField("PASSWORD")
    private String passWord;

    @TableField("NICK_TIME")
    private String nickTime;

    @TableField("PLATFO")
    private String platfo;

    @TableField("OPEN_ID")
    private String openId;

    @TableField("HEAD_URL")
    private String headUrl;

    @TableField("EMAIL")
    private String email;

    @TableField("ACCOUNT_LOCK")
    private Boolean accountLock;

    @JsonIgnore
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @TableField("CREATE_TIME")
    private LocalDateTime createTime;

    @JsonIgnore
    @JsonDeserialize(using = LocalDateTimeDeserializer.class)
    @JsonSerialize(using = LocalDateTimeSerializer.class)
    @DateTimeFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    @TableField("UPDATE_TIME")
    private LocalDateTime updateTime;

    @Override
    protected Serializable pkVal() {
        return this.id;
    }

    @Override
    public String toString() {
        return "User{" +
                "id='" + id + '\'' +
                ", salt='" + salt + '\'' +
                ", thridUserId='" + thridUserId + '\'' +
                ", userName='" + userName + '\'' +
                ", passWord='" + passWord + '\'' +
                ", nickTime='" + nickTime + '\'' +
                ", platfo='" + platfo + '\'' +
                ", openId='" + openId + '\'' +
                ", headUrl='" + headUrl + '\'' +
                ", email='" + email + '\'' +
                ", accountLock=" + accountLock +
                ", createTime=" + createTime +
                ", updateTime=" + updateTime +
                '}';
    }
}
